package com.valtech.poc.sms.dao;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Component;

import com.valtech.poc.sms.entities.Employee;
import com.valtech.poc.sms.entities.Manager;
import com.valtech.poc.sms.entities.User;
import com.valtech.poc.sms.repo.UserRepo;


@Component
public class UserDAOImpl implements UserDAO {
	 
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Autowired
	private ManagerRepo managerRepo;
	
	@Override
	public Manager getMidByMname(String managerName) {
		String sql="select * from manager where e_id=(select e_id from employee where emp_name=?)";
//		return jdbcTemplate.queryForObject(sql, Integer.class,managerName);
		
			return (Manager)  this.jdbcTemplate.queryForObject(
			        sql,
			        new Object[]{managerName},
			        new RowMapper<Manager>() {
			        	public Manager mapRow(ResultSet rs, int rowNum) throws SQLException {
			                Manager manager = new Manager();
			                int eid = rs.getInt("e_id");
//							Seat seat = userre.findById(seatId).get();
//			                int mid=manager.getmId()
			                manager=
			                manager.setManagerDetails(rs.get);
			                employee.seteId(rs.getInt("e_id"));
			                employee.setPhNum(rs.getString("ph_num"));
			                employee.setMailId(rs.getString("mail_id"));
			                return employee;
			            }
						
			        });
		}
	}
//
//	@Override
//	public void saveEmployee(Employee employee, int mId) {
//		String sql="insert into employee values (?,?,?,?,?)";
//		jdbcTemplate.update(sql,employee.getEmpName(),employee.getMailId(),employee.getPhNum(),mId);
//	}
//
//	@Override
//	public void saveUser(User user, Employee eId) {
//		String sql="insert into user values (?,?,?,?,?)";
//		jdbcTemplate.update(sql,false,user.getEmpId(),user.getPass(),eId.geteId(),null);
//	}

	@Override
	public int getRidByRoleName(String role) {
		String sql="select r_id from roles where role=?";
		return jdbcTemplate.queryForObject(sql, Integer.class,role);
	}

	@Override
	public void saveUserRole(int uId, int rId) {
		String sql="insert into user_roles values(?,?)";
		jdbcTemplate.update(sql,uId,rId);
	}

//	
//	@Override
//	public void saveManager(Manager mng) {
//		String sql="insert into manager values (?)";
//		jdbcTemplate.update(sql,mng);
//	}

}
